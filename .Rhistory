knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warnings = FALSE)
#imports
library(tidyverse)
library(GGally)
#| label: data-import
salaries <- read_csv("ds_salaries.csv")
salaries <- salaries %>%
mutate(work_year = as.factor(work_year),
job_title = ifelse(job_title %in% c("Data Scientist", "Data Engineer"), job_title,"Other"),
salary_currency = ifelse(salary_currency %in% c("CAD", "EUR", "GBP", "INR", "USD"), salary_currency,"Other"),
employee_residence = ifelse(employee_residence %in% c("CA", "DE", "ES","GB", "IN", "US"), salary_currency,"Other"),
remote_ratio = recode(remote_ratio, "100" = "Remote","50" = "Hybrid", "0" = "In-person"),
company_location = ifelse(company_location %in% c("CA", "DE", "ES","GB", "IN", "US"), salary_currency,"Other"))%>%select(-salary, -employee_residence, -salary_currency)
nrow(salaries)
nrow(salaries)
nrow(salaries)
ncol(salaries)
salaries$response_var
View(salaries)
#| label: data-import
salaries <- read_csv("ds_salaries.csv")
View(salaries)
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warnings = FALSE)
options(scipen = 999)
#imports
library(tidyverse)
library(GGally)
library(parsnip)
library(broom)
#| label: data-import
salaries <- read_csv("ds_salaries.csv")
#| label: data-manipulation
salaries <- salaries %>%
mutate(work_year = as.factor(work_year),
job_title = ifelse(job_title %in% c("Data Scientist", "Data Engineer"), job_title,"Other"),
salary_currency = ifelse(salary_currency %in% c("CAD", "EUR", "GBP", "INR", "USD"), salary_currency,"Other"),
employee_residence = ifelse(employee_residence %in% c("CA", "DE", "ES","GB", "IN", "US"), employee_residence,"Other"),
remote_ratio = recode(remote_ratio, "100" = "Remote","50" = "Hybrid", "0" = "In-person"),
company_location = ifelse(company_location %in% c("CA", "DE", "ES","GB", "IN", "US"), company_location,"Other"))
ggplot(data = salaries, aes(x = salary_in_usd))+
geom_histogram()+ labs(x= 'Salary in US dollars', y = 'Count')+ theme_bw()
summary(salaries$salary_in_usd)
summary(salaries$salary_in_usd)
ggplot(data = salaries, aes(x = experience_level, y = salary_in_usd))+
geom_boxplot()+
theme_bw()+
labs(x ='Experience level of professional', y = 'Salary in US dollars')
ggplot(data = salaries, aes(x = company_location, y = salary_in_usd))+
geom_boxplot()+
theme_bw()+
labs(x ='Company location', y = 'Salary in US dollars')
ggplot(data = salaries, aes(x = company_size, y = salary_in_usd))+
geom_boxplot()+
theme_bw()+
labs(x ='Company size', y = 'Salary in US dollars')
salaries <- salaries%>%select(-salary, -employee_residence, -salary_currency)
salaries <- salaries%>%select(-salary, -employee_residence, -salary_currency)
#| label: analysis
# Make a statistical analysis (e.g. a model) here.
linear_reg() |>
set_engine("lm") |>
fit(salary_in_usd ~ ., data = salaries)|>
tidy()
#| label: analysis
# Make a statistical analysis (e.g. a model) here.
linear_reg() |>
set_engine("lm") |>
fit(salary_in_usd ~ ., data = salaries)|>
tidy()
linear_reg() |>
set_engine("lm") |>
fit(salary_in_usd ~ ., data = salaries)|>
glance()
We will exclude `employee_residence` and `salary_currency` from the plot because of their high similarity, likely leading to multicollinearity. Given their close similarity, retaining both variables in the visualization might introduce redundancy and potentially obscure other meaningful patterns in the data.
quarto preview report.qmd --to=html --no-watch-inputs --no-browse
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warnings = FALSE)
options(scipen = 999)
#imports
library(tidyverse)
library(GGally)
library(parsnip)
library(broom)
ggplot(data = salaries, aes(x = salary_in_usd))+
geom_histogram()+ labs(x= 'Salary in US dollars', y = 'Count')+ theme_bw()
